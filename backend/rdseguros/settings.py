"""
Django settings for rdseguros project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-vp6axht)1%r$^$5hcgxo5awl^rzuch$15m@-m=zmb=r4$0myzv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',  # ADICIONADO: Essencial para o CORS, deve vir antes do seu app
    'contato',      # SEU APP DE CONTATO
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware', # ADICIONADO: Processa as requisições CORS. POSICIONE AQUI.
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'rdseguros.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'rdseguros.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# ================================================================
# Configurações para CORS (Cross-Origin Resource Sharing)
# ESSENCIAL para permitir que seu frontend (site HTML) se comunique com este backend.
# ================================================================
CORS_ALLOWED_ORIGINS = [
    "null",                     # Essencial para testes locais ao abrir o HTML diretamente via file://
    "http://127.0.0.1:8000",    # Onde seu backend Django está rodando por padrão (se usar porta 8000)
    "http://localhost:8000",    # Outra forma de acessar localhost (inclua se usar Live Server, ex: "http://127.0.0.1:5500")
    # ADICIONE AQUI O DOMÍNIO DO SEU SITE QUANDO ELE ESTIVER ONLINE (em produção), EX: "https://rdseguros.com.br"
]
CORS_ALLOW_ALL_ORIGINS = False # Em produção, defina como False e liste apenas os domínios permitidos


# ================================================================
# Configurações de E-mail (SMTP)
# ESSENCIAL para o Django poder enviar e-mails.
# ================================================================
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.example.com'        # SUBSTITUA: Servidor SMTP do seu provedor de e-mail (Ex: 'smtp.gmail.com', 'smtp-mail.outlook.com')
EMAIL_PORT = 587                       # GERALMENTE 587 para TLS/STARTTLS. Pode ser 465 para SSL.
EMAIL_USE_TLS = True                   # GERALMENTE True para a porta 587
# EMAIL_USE_SSL = False                # Se usar porta 465, mude EMAIL_USE_TLS para False e EMAIL_USE_SSL para True

EMAIL_HOST_USER = 'seu_email@example.com' # SUBSTITUA: O SEU ENDEREÇO DE E-MAIL (REMETENTE)
EMAIL_HOST_PASSWORD = 'sua_senha_do_email' # SUBSTITUA: A SENHA DESSE E-MAIL. **ATENÇÃO AO GMAIL!**
DEFAULT_FROM_EMAIL = 'seu_email@example.com' # Opcional: E-mail que aparecerá como remetente padrão
DEFAULT_TO_EMAIL = 'contato_corretora@example.com' # SUBSTITUA: O E-MAIL DA CORRETORA (para onde o formulário vai enviar)

# Para depuração: se tiver problemas com e-mail, pode temporariamente usar o backend de console.
# As mensagens de e-mail aparecerão no terminal onde seu servidor Django está rodando.
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'